"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[29229],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},b=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(t),b=r,d=p["".concat(s,".").concat(b)]||p[b]||m[b]||i;return t?a.createElement(d,l(l({ref:n},c),{},{components:t})):a.createElement(d,l({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=b;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=t[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},67469:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=t(87462),r=(t(67294),t(3905));const i={id:"zio-nebula",title:"ZIO NebulaGraph"},l=void 0,o={unversionedId:"ecosystem/community/zio-nebula",id:"ecosystem/community/zio-nebula",title:"ZIO NebulaGraph",description:"zio-nebula is a simple wrapper around nebula-java for easier integration with NebulaGraph into Scala, ZIO applications.",source:"@site/docs/ecosystem/community/zio-nebula.md",sourceDirName:"ecosystem/community",slug:"/ecosystem/community/zio-nebula",permalink:"/ecosystem/community/zio-nebula",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/ecosystem/community/zio-nebula.md",tags:[],version:"current",frontMatter:{id:"zio-nebula",title:"ZIO NebulaGraph"}},s={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Installation",id:"installation",level:2},{value:"Example",id:"example",level:2}],c={toc:u},p="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(p,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/nebula-contrib/zio-nebula"},"zio-nebula")," is a simple wrapper around ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/vesoft-inc/nebula-java/"},"nebula-java")," for easier integration with ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/vesoft-inc/nebula"},"NebulaGraph")," into Scala, ZIO applications."),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Supports all clients: Session Pool\u3001Pool\u3001Storage\u3001Meta"),(0,r.kt)("li",{parentName:"ul"},"Support for configuring clients with typesafe config"),(0,r.kt)("li",{parentName:"ul"},"Other optimizations suitable for Scala pure functional"),(0,r.kt)("li",{parentName:"ul"},"Support Scala 3, Scala 2.13 and Scala 2.12")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"In order to use this library, we need to add the following line in our ",(0,r.kt)("inlineCode",{parentName:"p"},"build.sbt")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'libraryDependencies += "io.github.jxnu-liguobin" %% "zio-nebula" % <latest version>\n')),(0,r.kt)("p",null,"There are the version correspondence between zio-nebula and nebula-java:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"zio"),(0,r.kt)("th",{parentName:"tr",align:"center"},"zio-nebula"),(0,r.kt)("th",{parentName:"tr",align:"center"},"nebula-java"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"2.0.x"),(0,r.kt)("td",{parentName:"tr",align:"center"},"0.0.x"),(0,r.kt)("td",{parentName:"tr",align:"center"},"3.6.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"2.0.x"),(0,r.kt)("td",{parentName:"tr",align:"center"},"0.1.0"),(0,r.kt)("td",{parentName:"tr",align:"center"},"3.6.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"2.0.x"),(0,r.kt)("td",{parentName:"tr",align:"center"},"0.1.1"),(0,r.kt)("td",{parentName:"tr",align:"center"},"3.6.1")))),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"Usually, we use a session client, which can be conveniently used in ZIO applications like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import zio._\nimport zio.nebula._\n\nfinal class NebulaSessionClientExample(sessionClient: NebulaSessionClient) {\n\n  def execute(stmt: String): ZIO[Any, Throwable, NebulaResultSet] = {\n    // your business logic\n    sessionClient.execute(stmt)\n  }\n}\n\nobject NebulaSessionClientExample {\n  lazy val layer = ZLayer.fromFunction(new NebulaSessionClientExample(_))\n}\n\nobject NebulaSessionClientMain extends ZIOAppDefault {\n\n  override def run = (for {\n    _ <- ZIO.serviceWithZIO[NebulaSessionClient](_.init()) // since 0.1.1, no need to call it manually. \n    _ <- ZIO.serviceWithZIO[NebulaSessionClientExample](\n             _.execute(\"\"\"\n                         |INSERT VERTEX person(name, age) VALUES \n                         |'Bob':('Bob', 10), \n                         |'Lily':('Lily', 9),'Tom':('Tom', 10),\n                         |'Jerry':('Jerry', 13),\n                         |'John':('John', 11);\"\"\".stripMargin)\n           )\n    _ <- ZIO.serviceWithZIO[NebulaSessionClientExample](\n             _.execute(\"\"\"\n                         |INSERT EDGE like(likeness) VALUES\n                         |'Bob'->'Lily':(80.0),\n                         |'Bob'->'Tom':(70.0),\n                         |'Lily'->'Jerry':(84.0),\n                         |'Tom'->'Jerry':(68.3),\n                         |'Bob'->'John':(97.2);\"\"\".stripMargin)\n           )\n    _ <- ZIO.serviceWithZIO[NebulaSessionClientExample](\n             _.execute(\"\"\"\n                         |USE test;\n                         |MATCH (p:person) RETURN p LIMIT 4;\n                         |\"\"\".stripMargin)\n           )\n  } yield ())\n    .provide(\n      Scope.default,\n      NebulaSessionClientExample.layer,\n      SessionClientEnv\n    )\n\n}\n")),(0,r.kt)("p",null,"Add configuration in classpath:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-hocon"},'{\n  graph {\n    address = [\n      {\n        host = "127.0.0.1",\n        port = 9669\n      }\n    ]\n    auth {\n      username = "root"\n      password = "nebula"\n    }\n    spaceName = "test"\n    reconnect = true\n  }\n\n  meta {\n    address = [\n      {\n        host = "127.0.0.1",\n        port = 9559\n      }\n    ]\n    timeoutMills = 30000\n    connectionRetry = 3\n    executionRetry = 1\n    enableSSL = false\n  }\n\n  storage {\n    address = [\n      {\n        host = "127.0.0.1",\n        port = 9559\n      }\n    ]\n    timeoutMills = 30000\n    connectionRetry = 3\n    executionRetry = 1\n    enableSSL = false\n  }\n\n  pool {\n    timeoutMills = 60000\n    enableSsl = false\n    minConnsSize = 10\n    maxConnsSize = 10\n    intervalIdleMills = 100\n    waitTimeMills = 100\n  }\n}\n')))}m.isMDXComponent=!0}}]);